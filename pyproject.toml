[build-system]
requires = ["setuptools>=65", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "nbdfinder"
version = "2.0.0"
description = "Comprehensive toolkit for detecting non-B DNA structures in genomic sequences"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Dr. Venkata Rajesh Yella", email = "vryella@example.com"}
]
maintainers = [
    {name = "Dr. Venkata Rajesh Yella", email = "vryella@example.com"}
]
keywords = [
    "bioinformatics", "genomics", "dna-structures", "non-b-dna", 
    "g-quadruplex", "motif-detection", "genome-analysis"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
    "Topic :: Scientific/Engineering :: Information Analysis"
]
requires-python = ">=3.8"

dependencies = [
    "numpy>=1.20.0",
    "pandas>=1.3.0",
    "matplotlib>=3.5.0",
    "seaborn>=0.11.0",
    "plotly>=5.0.0",
    "biopython>=1.79",
    "pydantic>=2.0.0",
    "fastapi>=0.100.0",
    "uvicorn[standard]>=0.20.0",
    "hyperscan>=0.7.0",
    "numba>=0.56.0",
    "scipy>=1.7.0",
    "scikit-learn>=1.0.0",
    "networkx>=2.6.0",
    "pyyaml>=6.0",
    "click>=8.0.0",
    "rich>=12.0.0",
    "typer>=0.7.0"
]

[project.optional-dependencies]
# Web interface dependencies
web = [
    "streamlit>=1.25.0",
    "dash>=2.10.0",
    "gradio>=3.35.0"
]

# Visualization extras
viz = [
    "matplotlib-venn>=0.11.0",
    "plotly-express>=0.4.0",
    "bokeh>=2.4.0",
    "altair>=4.2.0"
]

# Export format support
export = [
    "openpyxl>=3.0.0",
    "xlsxwriter>=3.0.0",
    "pyarrow>=8.0.0",
    "tables>=3.7.0"
]

# Development dependencies  
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-benchmark>=4.0.0",
    "black>=22.0.0",
    "isort>=5.10.0",
    "flake8>=5.0.0",
    "mypy>=1.0.0",
    "pre-commit>=2.20.0",
    "sphinx>=5.0.0",
    "sphinx-rtd-theme>=1.2.0"
]

# Complete installation with all extras
all = [
    "nbdfinder[web,viz,export,dev]"
]

[project.urls]
Homepage = "https://github.com/VRYella/NBDFinder"
Documentation = "https://nbdfinder.readthedocs.io"
Repository = "https://github.com/VRYella/NBDFinder"
Issues = "https://github.com/VRYella/NBDFinder/issues"
Changelog = "https://github.com/VRYella/NBDFinder/blob/main/CHANGELOG.md"

[project.scripts]
nbdfinder = "nbdfinder.cli.main:main"
slice-fasta = "nbdfinder.cli.slice_fasta:main"

[project.entry-points."nbdfinder.detectors"]
curved = "nbdfinder.detectors.class01_curved:detect_curved_dna"
slipped = "nbdfinder.detectors.class02_slipped:detect_slipped_dna"
cruciform = "nbdfinder.detectors.class03_cruciform:detect_cruciform"
rloop = "nbdfinder.detectors.class04_rloop:detect_rloop"
triplex = "nbdfinder.detectors.class05_triplex:detect_triplex"
g4 = "nbdfinder.detectors.class06_g4_family:detect_g4_family"
imotif = "nbdfinder.detectors.class07_imotif:detect_imotif"
zdna = "nbdfinder.detectors.class08_zdna:detect_zdna"
hybrid = "nbdfinder.detectors.class09_hybrid:detect_hybrid"
cluster = "nbdfinder.detectors.class10_cluster:detect_cluster"

[tool.setuptools]
zip-safe = false
include-package-data = true

[tool.setuptools.packages.find]
include = ["nbdfinder*"]
exclude = ["tests*", "docs*", "examples*"]

[tool.setuptools.package-data]
nbdfinder = [
    "config/*.yaml",
    "config/*.yml", 
    "data/*.json",
    "data/*.csv"
]

# Tool configurations
[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | archives
)/
'''

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
skip_glob = ["archives/*"]

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning"
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests"
]

[tool.coverage.run]
source = ["nbdfinder"]
omit = [
    "*/tests/*",
    "*/archives/*",
    "setup.py"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:"
]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "hyperscan.*",
    "numba.*",
    "matplotlib.*",
    "seaborn.*",
    "plotly.*",
    "streamlit.*"
]
ignore_missing_imports = true